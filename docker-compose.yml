services:
  postgres:
    build:
      context: ./postgreSQL
      dockerfile: postgresDB.Dockerfile
      args:
        - DB_USER=${POSTGRES_USER}
        - DB_PASSWORD=${POSTGRES_PASSWORD}
        - DB_NAME=${POSTGRES_DB}
    container_name: postgres_db
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  pgadmin:
    build:
      context: ./postgreSQL
      dockerfile: pgAdmin.Dockerfile
      args:
        PGADMIN_EMAIL: ${PGADMIN_EMAIL}
        PGADMIN_PASSWORD: ${PGADMIN_PASSWORD}
    container_name: pgadmin_ui  
    restart: always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: frontend.Dockerfile
      args:
      - PORT_REFERENCE=${PORT_REFERENCE}
      - HOST_REFERENCE=${HOST_REFERENCE}
    container_name: vue_frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - node_modules_cache:/app/node_modules  # This prevents host node_modules from overriding container's
    depends_on:
      - postgres
    networks:
      - app-network

  php:
    build:
      context: ./backend
      dockerfile: php-manager.Dockerfile
      args:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=${POSTGRES_DB}
    container_name: php_manager
    volumes:
      - ./backend/php:/var/www/php
    networks:
      - app-network

  backend-server-caddy:
    build:
      context: ./backend
      dockerfile: caddy-server.Dockerfile
    container_name: backend_server_caddy
    volumes:
      - ./backend/php:/var/www/php
    ports:
      - "6969:80"
    depends_on:
      - php
    networks:
      - app-network

  cdn:
    build:
      context: ./CDN
      dockerfile: caddy-cdn.Dockerfile
    container_name: caddy-cdn
    ports:
      - "9091:80"
    volumes:
      - ./CDN/assets:/srv/assets:ro  # Read-only access to assets
    networks:
      - app-network
    restart: unless-stopped


volumes:
  postgres_data:
  pgadmin_data:
  node_modules_cache:

networks:
  app-network:
    driver: bridge
